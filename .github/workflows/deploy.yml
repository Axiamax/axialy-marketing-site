name: Build & Deploy Axialy-UI to DigitalOcean
on:
  push:
    branches: [main]          # deploy on every push to main
  workflow_dispatch:          # …or manual trigger

env:
  # --- customise here ----------------------------------------------------
  DROPLET_NAME: axialy-ui
  DROPLET_REGION: sfo3
  DROPLET_SIZE: s-1vcpu-1gb
  DROPLET_IMAGE: ubuntu-22-04-x64
  SUBDOMAIN: ui               # ui.axialy.ai → change for api/admin repos
  DOMAIN: axialy.ai
  SSH_USER: root
  # ----------------------------------------------------------------------

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check-out repository
      uses: actions/checkout@v4

    - name: Install doctl & authenticate
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_TOKEN }}

    - name: Ensure droplet exists / create if missing
      id: droplet
      shell: bash
      run: |
        set -eo pipefail
        # Look for existing droplet
        INFO=$(doctl compute droplet list --no-header --format ID,Name,PublicIPv4 | grep -w "$DROPLET_NAME" || true)
        if [[ -z "$INFO" ]]; then
          echo "::notice::Droplet not found – creating…"
          doctl compute droplet create "$DROPLET_NAME" \
            --size $DROPLET_SIZE \
            --image $DROPLET_IMAGE \
            --region $DROPLET_REGION \
            --ssh-keys ${{ secrets.SSH_FINGERPRINT }} \
            --tag-name axialy \
            --wait
          INFO=$(doctl compute droplet list --no-header --format ID,Name,PublicIPv4 | grep -w "$DROPLET_NAME")
          CREATED=true
        else
          echo "::notice::Droplet already exists – re-using."
          CREATED=false
        fi
        DID=$(echo "$INFO" | awk '{print $1}')
        DIP=$(echo "$INFO" | awk '{print $3}')
        echo "id=$DID"      >> $GITHUB_OUTPUT
        echo "ip=$DIP"      >> $GITHUB_OUTPUT
        echo "created=$CREATED" >> $GITHUB_OUTPUT

    - name: Install xmllint (for DNS step)
      run: sudo apt-get update && sudo apt-get install -y libxml2-utils

    - name: Add droplet host key to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ steps.droplet.outputs.ip }} >> ~/.ssh/known_hosts

    - name: Copy source to droplet
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ steps.droplet.outputs.ip }}
        username: ${{ env.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "."
        target: "/var/www/axialy-ui"
        rm: true                 # removes extraneous files on target

    - name: Remote post-deploy commands
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ steps.droplet.outputs.ip }}
        username: ${{ env.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          set -e
          apt-get update -y
          apt-get install -y apache2
          systemctl enable apache2
          systemctl restart apache2
          echo "Axialy-UI deployed via GitHub Actions on $(date)" > /var/www/axialy-ui/DEPLOY_INFO.txt

    - name: Sync DNS at NameSilo (only if droplet was NEW)
      if: ${{ steps.droplet.outputs.created == 'true' }}
      shell: bash
      env:
        API_KEY: ${{ secrets.NAMESILO_API_KEY }}
      run: |
        set -eo pipefail
        HOST=$SUBDOMAIN
        IP=${{ steps.droplet.outputs.ip }}
        # get record-id if it exists
        RECORDS=$(curl -s "https://www.namesilo.com/api/dns/listRecords?version=1&type=xml&key=$API_KEY&domain=$DOMAIN")
        RRID=$(echo "$RECORDS" | xmllint --xpath "string(//resource_record[host='$HOST.$DOMAIN']/record_id)" - 2>/dev/null || true)
        if [[ -z "$RRID" ]]; then
          echo "::notice::Creating new A-record for $HOST.$DOMAIN → $IP"
          curl -s "https://www.namesilo.com/api/dns/addRecord?version=1&type=A&key=$API_KEY&domain=$DOMAIN&rrhost=$HOST&rrvalue=$IP&rrttl=3600" >/dev/null
        else
          echo "::notice::Updating existing A-record $RRID → $IP"
          curl -s "https://www.namesilo.com/api/dns/updateRecord?version=1&type=A&key=$API_KEY&domain=$DOMAIN&rrid=$RRID&rrhost=$HOST&rrvalue=$IP&rrttl=3600" >/dev/null
        fi
